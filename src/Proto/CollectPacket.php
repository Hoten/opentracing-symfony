<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: collector.proto

namespace Hoten\OpenTracingBundle\Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * CollectPacket is the message sent to a remote collector server by one of
 * it's clients.
 *
 * Generated from protobuf message <code>Hoten.OpenTracingBundle.Proto.CollectPacket</code>
 */
class CollectPacket extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.Hoten.OpenTracingBundle.Proto.CollectPacket.SpanID span = 1;</code>
     */
    private $span = null;
    /**
     * Generated from protobuf field <code>repeated .Hoten.OpenTracingBundle.Proto.CollectPacket.Annotation annotation = 2;</code>
     */
    private $annotation;

    public function __construct() {
        \Hoten\OpenTracingBundle\Proto\GPBMetadata\Collector::initOnce();
        parent::__construct();
    }

    /**
     * Generated from protobuf field <code>.Hoten.OpenTracingBundle.Proto.CollectPacket.SpanID span = 1;</code>
     * @return \Hoten\OpenTracingBundle\Proto\CollectPacket_SpanID
     */
    public function getSpan()
    {
        return $this->span;
    }

    /**
     * Generated from protobuf field <code>.Hoten.OpenTracingBundle.Proto.CollectPacket.SpanID span = 1;</code>
     * @param \Hoten\OpenTracingBundle\Proto\CollectPacket_SpanID $var
     * @return $this
     */
    public function setSpan($var)
    {
        GPBUtil::checkMessage($var, \Hoten\OpenTracingBundle\Proto\CollectPacket_SpanID::class);
        $this->span = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .Hoten.OpenTracingBundle.Proto.CollectPacket.Annotation annotation = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAnnotation()
    {
        return $this->annotation;
    }

    /**
     * Generated from protobuf field <code>repeated .Hoten.OpenTracingBundle.Proto.CollectPacket.Annotation annotation = 2;</code>
     * @param \Hoten\OpenTracingBundle\Proto\CollectPacket_Annotation[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAnnotation($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Hoten\OpenTracingBundle\Proto\CollectPacket_Annotation::class);
        $this->annotation = $arr;

        return $this;
    }

}

