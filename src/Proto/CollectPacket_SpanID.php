<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: collector.proto

namespace Hoten\OpenTracingBundle\Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * SpanID is the group of information which can uniquely identify the exact
 * span being collected.
 *
 * Generated from protobuf message <code>Hoten.OpenTracingBundle.Proto.CollectPacket.SpanID</code>
 */
class CollectPacket_SpanID extends \Google\Protobuf\Internal\Message
{
    /**
     * trace is the root ID of the tree that contains all of the spans
     * related to this one.
     *
     * Generated from protobuf field <code>fixed64 trace = 1;</code>
     */
    private $trace = 0;
    /**
     * span is an ID that probabilistically uniquely identifies this span.
     *
     * Generated from protobuf field <code>fixed64 span = 2;</code>
     */
    private $span = 0;
    /**
     * parent is the ID of the parent span, if any.
     *
     * Generated from protobuf field <code>fixed64 parent = 3;</code>
     */
    private $parent = 0;

    public function __construct() {
        \Hoten\OpenTracingBundle\Proto\GPBMetadata\Collector::initOnce();
        parent::__construct();
    }

    /**
     * trace is the root ID of the tree that contains all of the spans
     * related to this one.
     *
     * Generated from protobuf field <code>fixed64 trace = 1;</code>
     * @return int|string
     */
    public function getTrace()
    {
        return $this->trace;
    }

    /**
     * trace is the root ID of the tree that contains all of the spans
     * related to this one.
     *
     * Generated from protobuf field <code>fixed64 trace = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setTrace($var)
    {
        GPBUtil::checkUint64($var);
        $this->trace = $var;

        return $this;
    }

    /**
     * span is an ID that probabilistically uniquely identifies this span.
     *
     * Generated from protobuf field <code>fixed64 span = 2;</code>
     * @return int|string
     */
    public function getSpan()
    {
        return $this->span;
    }

    /**
     * span is an ID that probabilistically uniquely identifies this span.
     *
     * Generated from protobuf field <code>fixed64 span = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setSpan($var)
    {
        GPBUtil::checkUint64($var);
        $this->span = $var;

        return $this;
    }

    /**
     * parent is the ID of the parent span, if any.
     *
     * Generated from protobuf field <code>fixed64 parent = 3;</code>
     * @return int|string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * parent is the ID of the parent span, if any.
     *
     * Generated from protobuf field <code>fixed64 parent = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkUint64($var);
        $this->parent = $var;

        return $this;
    }

}

